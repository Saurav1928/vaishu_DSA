/* Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.
there may be duplicates in the original array.
Note: An array A rotated by x positions results in an array B of the same length such that A[i] == B[(i+x) % A.length], where % is the modulo operation.
Example 1:
Input: nums = [3,4,5,1,2]
Output: true
Explanation: [1,2,3,4,5] is the original sorted array.
You can rotate the array by x = 3 positions to begin on the the element of value 3: [3,4,5,1,2]. */


class Solution {
public:
    bool check(vector<int>& v) {
      int i,n=v.size(),cnt=0;
      for(i=0;i<n-1;i++)
      {
          if(v[i]>v[i+1])
          cnt++;
      }
      if(cnt==0)
      return true;
      else if(cnt>1)
      return false;
      else if(v[0]>=v[n-1])
      return true;
      else
      return false;
    }
};
